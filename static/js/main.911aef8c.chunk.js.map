{"version":3,"sources":["components/Title.jsx","components/Count.jsx","components/Controls.jsx","App.jsx","index.jsx"],"names":["Title","className","Count","timerSec","isoDate","Date","toISOString","HHMMSS","slice","ms","Controls","doStart","doStop","doRestart","doWait","running","type","onClick","name","disabled","timerStopObserve","Subject","App","useState","setRunning","setTimerSec","timerStart","reset","interval","pipe","startWith","scan","second","tap","takeUntil","asObservable","subscribe","next","timeToClick","buttonWait","document","querySelector","click","fromEvent","waitClick","buffer","debounceTime","map","e","length","filter","clicks","result","console","log","ReactDOM","render","getElementById"],"mappings":"qXAGaA,EAAQ,kBACnB,qBAAKC,UAAU,mBAAf,SACE,sBAAMA,UAAU,cAAhB,0BCDSC,G,MAAQ,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAChBC,EAAU,IAAIC,KAAgB,IAAXF,GAAgBG,cACnCC,EAASH,EAAQI,MAAM,GAAI,IAC3BC,EAAKL,EAAQI,MAAM,GAAI,IAE7B,OACE,sBAAKP,UAAU,mBAAf,UACE,sBAAMA,UAAU,gBAAhB,SACGM,IAEH,sBAAMN,UAAU,YAAhB,SACGQ,SCXIC,G,MAAW,SAAC,GAAD,IACtBC,EADsB,EACtBA,QAASC,EADa,EACbA,OACTC,EAFsB,EAEtBA,UAAWC,EAFW,EAEXA,OACXC,EAHsB,EAGtBA,QAHsB,OAKtB,sBAAKd,UAAU,sBAAf,UACE,wBACEe,KAAK,SACLf,UAAU,gDACVgB,QAASF,EAAUH,EAASD,EAH9B,SAKGI,EAAU,oBAAY,uBAGzB,yBACEC,KAAK,SACLE,KAAK,eACLjB,UAAU,0CACVkB,UAAWJ,EACXE,QAAS,kBAAMH,KALjB,8BAQE,uBARF,oBAYA,wBACEE,KAAK,SACLf,UAAU,6CACVgB,QAASJ,EAHX,uCCfEO,EAAmB,IAAIC,IAEhBC,EAAM,WACjB,MAA8BC,oBAAS,GAAvC,mBAAOR,EAAP,KAAgBS,EAAhB,KACA,EAAgCD,mBAAS,GAAzC,mBAAOpB,EAAP,KAAiBsB,EAAjB,KAEMC,EAAa,SAACC,GAClBC,YAAS,KACNC,KACCC,YAAoB,eAAVH,EAAyB,EAAIxB,GACvC4B,aAAK,SAAAC,GAAM,OAAIA,EAAS,KACxBC,YAAIR,GACJS,YAAUd,EAAiBe,iBAE5BC,aAuCL,OACE,oCACE,sBAAKnC,UAAU,aAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CACEE,SAAUA,IAEZ,cAAC,EAAD,CACEQ,QA5CQ,WACda,GAAW,GAEXE,EAAW,kBA0CLd,OAvCO,WACbQ,EAAiBiB,MAAK,GACtBb,GAAW,GACXC,EAAY,IAqCNZ,UAlCU,WAChBO,EAAiBiB,MAAK,GACtBX,EAAW,cACXF,GAAW,IAgCLV,OA7BO,WAAwB,IAAvBwB,EAAsB,uDAAR,IACtBC,EAAaC,SAASC,cAAc,2BACpCC,EAAQC,YAAUJ,EAAY,SAE9BK,EAAYF,EACfb,KACCgB,YAAOH,EAAMb,KAAKiB,YAAaR,KAC/BS,aAAI,SAAAC,GAAC,OAAIA,EAAEC,UACXC,aAAO,SAAAC,GAAM,OAAe,IAAXA,MAGrBP,EAAUR,WAAU,SAAAgB,GAClBC,QAAQC,IAAI,iBAAkBF,EAAQ,kBAAmBd,GACzDlB,EAAiBiB,MAAK,GACtBb,GAAW,OAgBPT,QAASA,UC3EnBwC,IAASC,OACP,cAAC,EAAD,IACAhB,SAASiB,eAAe,W","file":"static/js/main.911aef8c.chunk.js","sourcesContent":["import React from 'react';\nimport './Title.scss';\n\nexport const Title = () => (\n  <div className=\"title__container\">\n    <span className=\"title__text\">\n      Stopwatch\n    </span>\n  </div>\n);\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport './Count.scss';\n\nexport const Count = ({ timerSec }) => {\n  const isoDate = new Date(timerSec * 100).toISOString();\n  const HHMMSS = isoDate.slice(11, 19);\n  const ms = isoDate.slice(19, 21);\n\n  return (\n    <div className=\"count__container\">\n      <span className=\"count__HHMMSS\">\n        {HHMMSS}\n      </span>\n      <span className=\"count__ms\">\n        {ms}\n      </span>\n    </div>\n  );\n};\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport './Controls.scss';\n\nexport const Controls = ({\n  doStart, doStop,\n  doRestart, doWait,\n  running\n}) => (\n  <div className=\"controls__container\">\n    <button\n      type=\"button\"\n      className=\"controls__button controls__button--start-stop\"\n      onClick={running ? doStop : doStart}\n    >\n      {running ? '‚èπÔ∏è Stop' : '‚ñ∂Ô∏è Start'}\n    </button>\n\n    <button\n      type=\"button\"\n      name=\"button--wait\"\n      className=\"controls__button controls__button--wait\"\n      disabled={!running}\n      onClick={() => doWait()}\n    >\n      ‚è∏Ô∏è Wait\n      <br />\n      (double-click)\n    </button>\n\n    <button\n      type=\"button\"\n      className=\"controls__button controls__button--restart\"\n      onClick={doRestart}\n    >\n      üîÑ Restart\n    </button>\n  </div>\n);\n","import './App.css';\nimport React, { useState } from 'react';\nimport {\n  interval, Subject, fromEvent\n} from 'rxjs';\nimport {\n  scan, tap, startWith,\n  takeUntil,\n  buffer, debounceTime, map, filter\n} from 'rxjs/operators';\n\nimport { Title } from './components/Title';\nimport { Count } from './components/Count';\nimport { Controls } from './components/Controls';\n\nconst timerStopObserve = new Subject();\n\nexport const App = () => {\n  const [running, setRunning] = useState(false);\n  const [timerSec, setTimerSec] = useState(0);\n\n  const timerStart = (reset) => {\n    interval(100)\n      .pipe(\n        startWith(reset === 'with reset' ? 0 : timerSec),\n        scan(second => second + 1),\n        tap(setTimerSec),\n        takeUntil(timerStopObserve.asObservable())\n      )\n      .subscribe();\n  };\n\n  const doStart = () => {\n    setRunning(true);\n\n    timerStart('without reset');\n  };\n\n  const doStop = () => {\n    timerStopObserve.next(false);\n    setRunning(false);\n    setTimerSec(0);\n  };\n\n  const doRestart = () => {\n    timerStopObserve.next(false);\n    timerStart('with reset');\n    setRunning(true);\n  };\n\n  const doWait = (timeToClick = 300) => {\n    const buttonWait = document.querySelector('.controls__button--wait');\n    const click = fromEvent(buttonWait, 'click');\n\n    const waitClick = click\n      .pipe(\n        buffer(click.pipe(debounceTime(timeToClick))),\n        map(e => e.length),\n        filter(clicks => clicks === 2)\n      );\n\n    waitClick.subscribe(result => {\n      console.log('triple click: ', result, 'debounceTime = ', timeToClick);\n      timerStopObserve.next(false);\n      setRunning(false);\n    });\n  };\n\n  return (\n    <container>\n      <div className=\"timer-wrap\">\n        <Title />\n        <Count\n          timerSec={timerSec}\n        />\n        <Controls\n          doStart={doStart}\n          doStop={doStop}\n          doRestart={doRestart}\n          doWait={doWait}\n          running={running}\n        />\n      </div>\n    </container>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}